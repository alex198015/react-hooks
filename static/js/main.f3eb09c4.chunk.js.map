{"version":3,"sources":["component/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","component/Search.js","component/Card.js","pages/Home.js","pages/About.js","component/Repos.js","pages/Profile.js","component/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","maxWidth","hight","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3eb09c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n            <div className=\"navbar-brand\">\r\n                Github Поиск\r\n        </div>\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"/about\" className=\"nav-link\">Информация</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import {createContext} from 'react'\r\n\r\nexport const AlertContext = createContext()","import { createContext } from 'react';\r\n\r\nexport const GithubContext = createContext()\r\n","import React,{useContext, useState} from 'react'\r\nimport { AlertContext } from './../context/alert/alertContext';\r\nimport { GithubContext } from './../context/github/githubContext';\r\n\r\n\r\nexport const Search = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const github = useContext(GithubContext)\r\n\r\n    const onSubmit = (event) => {\r\n        \r\n        if(event.key !== 'Enter'){\r\n            return\r\n           \r\n        }\r\n\r\n        github.clearUsers()\r\n\r\n        if(value.trim()){\r\n            alert.hide()\r\n            github.search(value.trim())\r\n            \r\n        }else{\r\n            alert.show('Введите данные пользователя!')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"form-group\">\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Введите ник пользователя...\"\r\n            value = {value}\r\n            onChange = {event => setValue(event.target.value)}\r\n            onKeyPress={onSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Card = ({user}) => (\r\n    <div className=\"card \" >\r\n        <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{user.login}</h5>\r\n        <Link to={'/profile/' + user.login} className=\"btn btn-primary\">Открыть</Link>\r\n       </div>\r\n    </div>\r\n    \r\n)","import React, { Fragment,useContext } from 'react'\r\nimport { Search } from './../component/Search';\r\nimport { Card } from './../component/Card';\r\nimport { GithubContext } from './../context/github/githubContext';\r\n\r\nexport const Home = () => {\r\n    const{loading, users} = useContext(GithubContext)\r\n    // const cards = new Array(15)\r\n    //     .fill('')\r\n    //     .map((_, i) => i)        \r\n    return (\r\n        <Fragment>\r\n            <Search />\r\n\r\n            <div className=\"row\">\r\n                \r\n                {\r\n                loading ? <p className=\"text-center\">Загрузка...</p> :\r\n                users.map(user => (\r\n                            <div className=\"col-sm-4 col-md-3 mb-4 col-lg-2\" key={user.id}>\r\n                        <Card user={user}/>\r\n                    </div>\r\n                        )\r\n                    )\r\n                \r\n                }\r\n                \r\n                \r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const About = () => {\r\n    return(\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n  <div className=\"container\">\r\n    <h1 className=\"display-4\">Информация</h1>\r\n    <p className=\"lead\">Версия приложения : <strong>1.0.0</strong></p>\r\n  </div>\r\n</div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Repos = ({ repos }) => (\r\n    \r\n    \r\n    <React.Fragment>\r\n        \r\n        {repos.map(repo => (\r\n            <div className=\"card mb-3\" key={repo.id}>\r\n                <div className=\"card-body\">\r\n                    <h5>\r\n                        <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        ))}\r\n    </React.Fragment>\r\n)\r\n\r\n","import React, { useContext, useEffect, Fragment } from 'react'\r\nimport { GithubContext } from './../context/github/githubContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { Repos } from './../component/Repos';\r\n\r\nexport const Profile = ({ match }) => {\r\n    const { getUser, getRepos, loading, user, repos } = useContext(GithubContext)\r\n    const urlName = match.params.name\r\n\r\n    useEffect(() => {\r\n        getUser(urlName)\r\n        getRepos(urlName)\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    // console.log(match);\r\n\r\n    if (loading) {\r\n        return <p className=\"text-center\">Загрузка...</p>\r\n    }\r\n\r\n    const { name, company, avatar_url, location, bio, blog, login, html_url, followers, following, public_repos, public_gists } = user\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to='/' className=\"btn btn-link\">На главную</Link>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 text-center\">\r\n                            <img src={avatar_url} style={{maxWidth:'100%', hight: \"auto\"}} alt={name} />\r\n                            <h1>{name}</h1>\r\n                            {location && <p>Местоположение : {location}</p>}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {\r\n                                bio && <Fragment>\r\n                                    <h3>BIO</h3>\r\n                                    <p>{bio}</p>\r\n                                </Fragment>\r\n                            }\r\n                            <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-dark\">Открыть профиль</a>\r\n                            <ul>\r\n                                {login && <li>\r\n                                    <strong>Username: </strong> {login}\r\n                                </li>}\r\n                                {company && <li>\r\n                                    <strong>Компания: </strong> {company}\r\n                                </li>}\r\n                                {blog && <li>\r\n                                    <strong>Website: </strong> {blog}\r\n                                </li>}\r\n                            </ul>\r\n                            <div className=\"badge badge-primary\">Подписчики: {followers}</div>\r\n                            <div className=\"badge badge-success\">Подписан: {following}</div>\r\n                            <div className=\"badge badge-info\">Репозитории: {public_repos}</div>\r\n                            <div className=\"badge badge-dark\">Gists: {public_gists}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Repos repos={repos}/>\r\n        </Fragment >\r\n    )\r\n}","import React,{useContext} from 'react'\r\nimport { AlertContext } from './../context/alert/alertContext';\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n     if(!alert) return null   \r\n\r\n    return (\r\n        <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`} role=\"alert\">\r\n            {alert.text}\r\n            <button type=\"button\" className=\"close\"  aria-label=\"Close\" onClick={hide}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import { SHOW_ALERT, HIDE_ALERT } from './../types';\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, action) => action.payload,\r\n    [HIDE_ALERT]: () => null,\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'","import React,{useReducer} from 'react'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer';\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types';\r\n\r\nexport const AlertState = ({children}) => {\r\n    const[state, dispatch] = useReducer(alertReducer, null)\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n    const show = (text, type = 'secondary') => dispatch({type: SHOW_ALERT, payload: {type, text}})\r\n    \r\n    return(\r\n        <AlertContext.Provider value={{hide, show, alert:state}} >\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import { SEARCH_USERS, GET_REPOS } from \"../types\"\r\nimport { GET_USER, SET_LOADING, CLEAR_USERS } from './../types';\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]:(state,{payload}) => ({...state,users:payload, loading: false}),\r\n    [GET_REPOS]: (state,{payload}) => ({...state,repos:payload, loading: false}),\r\n    [GET_USER]: (state,{payload}) => ({...state,user:payload, loading: false}),\r\n    [SET_LOADING]: state => ({...state, loading: true}),\r\n    [CLEAR_USERS]: state => ({...state,users:[]}),\r\n    DEFAULT: state => state\r\n\r\n}\r\n\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport { GithubContext } from './githubContext';\r\nimport { githubReducer } from './githubReducer';\r\nimport { SEARCH_USERS, GET_USER, GET_REPOS, CLEAR_USERS, SET_LOADING } from '../types';\r\n\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENTS_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n\r\n\r\n\r\nexport const GithubState = ({ children }) => {\r\n    const initialState = {\r\n        user: {},\r\n        users:[],\r\n        loading: false,\r\n        repos:[]\r\n\r\n    }\r\n    const[state, dispatch] = useReducer(githubReducer,initialState)\r\n\r\n    const search = async value => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(withCreds(`https://api.github.com/search/users?q=${value}&`))\r\n\r\n        dispatch({type: SEARCH_USERS, payload:response.data.items})\r\n    }\r\n\r\n    const getUser = async name => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(withCreds(`https://api.github.com/users/${name}?`))\r\n\r\n\r\n        dispatch({type:GET_USER, payload:response.data})\r\n    }\r\n\r\n    const getRepos = async name => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`))\r\n\r\n        dispatch({type:GET_REPOS, payload: response.data})\r\n    }\r\n\r\n    const clearUsers = () => ({type:CLEAR_USERS})\r\n\r\n    const setLoading = () => ({type: SET_LOADING})\r\n\r\n    const {user, users, repos, loading} = state\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            search, getUser, getRepos, clearUsers, setLoading,\r\n            user, users, repos, loading\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport { Navbar } from './component/Navbar';\nimport { Home } from './pages/Home';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { About } from './pages/About';\nimport { Profile } from './pages/Profile';\nimport { Alert } from './component/Alert';\nimport { AlertState } from './context/alert/AlertState';\nimport { GithubState } from './context/github/GithubState';\n\n\n\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: 'Test alert' }} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/profile/:name\" component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}